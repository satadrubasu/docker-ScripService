spring.application.name=ScripService
server.port=8080

## Datasource Configurations
## The following has been configured such that ${env-var} is an env variable set in the OS
## meant to be used with docker compose etc.In unix platforms: ( Pre-requisite )
## export SPRING_DATASOURCE_USERNAME="testuser"
## export SPRING_DATASOURCE_PASSWORD="testuserpwd" 

## For docker linking.
##    docker run --name my-tomcat -p 127.0.0.1:8080:8080 -e APP_DB_DB=mydb -e APP_DB_USER=dbuser -e APP_DB_PASS=dbpass 
## --link mongo-myapp:mongo -v /path-to/tomcat/webapps:/usr/local/tomcat/webapps -d tomcat:8-jre8-alpine 
## Using environment variables means you don't need to list secrets in plain text along side your application.
## Using spring boot(didn't check if it works without boot), then any property can be overriden
##  via an environment variable automatically without modifying your application.properties. 
## ie, for a property called spring.datasource.url then the corresponding environment variable would be: 
## SPRING_DATASOURCE_URL. periods and dashes are automatically converted to underscores.

spring.datasource.url = jdbc:mysql://mysql:3306/spring_app_db?useSSL=false
spring.datasource.username = testuser
spring.datasource.password = testuserpwd

## Hibernate Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#########  Logging Configuration ##########
logging.file=/usr/local/app/logs/scripService.log
logging.level.org.springframework: info
logging.level.com.ansa:debug
